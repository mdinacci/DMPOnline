- title @plan.project

- if cannot?(:update, @plan)
  .read_only= t('dmp.read_only')

.plan_wrapper
  .plan_left_column
    .panel
      %h3= t('dmp.project_details')
      .panel_contents
        .attributes_table
          %table
            %tbody
              %tr
                %th= t('attributes.project')
                %td= plan_display(@plan, :project, nil, true)
              - if @plan.source_plan.present? 
                %tr
                  %th= t('attributes.duplicated_from')
                  %td= plan_display(@plan, :source_plan, nil, true)
              %tr
                %th= t('dmp.plan_created_at')
                %td= plan_display(@plan, :created_at, :long, true)
              %tr
                %th= t('attributes.budget')
                %td= plan_display(@plan, :budget, nil, true)
              %tr
                %th= t('attributes.start_date')
                %td= plan_display(@plan, :start_date, :long, true)
              %tr
                %th= t('attributes.end_date')
                %td= plan_display(@plan, :end_date, :long, true)
              %tr
                %th= t('attributes.lead_org')
                %td= plan_display(@plan, :lead_org, nil, true)
              %tr
                %th= t('attributes.other_orgs')
                %td= plan_display(@plan, :other_orgs, nil, true)
              - if @plan.repository.present?
                %tr
                  %th= t('attributes.repository')
                  %td= plan_display(@plan, :repository, nil, true)
    .link_spacing.top
      - if cannot? :update, @plan
        %span.disabled_link= t('dmp.edit_project')
      - elsif @plan.locked
        %span.disabled_link= t('dmp.locked')
      - else
        = link_to t('dmp.edit_project'), edit_plan_path(@plan), class: 'edit_link'
  
  .plan_right_column
    .panel
      %h3
        %span.info_icon{:title => t('dmp.share_plan_explanation')}
          %span= t('dmp.project_access')
      .panel_contents
        .attributes_table
          - if @plan.template_instance_rights.empty?
            = t('dmp.not_shared')
          - else
            %table
              %thead
                %tr
                  %th.wide= t('dmp.email')
                  %th= t('dmp.access')
              %tbody
                - @plan.user_list.each do |u_email, u_info|
                  %tr
                    %td.wide
                      = u_email
                      - if can? :manage, @plan
                        - unless u_email =~ /[*%]/
                          .notify
                            - if session[:sent_notification][u_info[:id]].blank?
                              = link_to t('dmp.notify.send'), notify_plan_path(@plan, template_instance_right_id: u_info[:id]), method: :put
                            - else
                              %span.email_sent= t('dmp.notify.sent_short')
                    %td
                      - roles = []
                      - u_info[:rights].each do |r| 
                        - roles << t("dmp.roles.#{r}")
                      = roles.join(', ')
            - if @plan.external_writable
              .external-write= t('dmp.external_write')
    .link_spacing.top
      = link_to t('dmp.edit_project_access'), rights_plan_path(@plan), class: 'edit_link'

.link_spacing
  .left
    = link_to t('dmp.my_plans'), plans_path, class: 'nav_link'
    - if cannot?(:update, @plan)
      %span.disabled_link= t('dmp.complete_plan')
    - else
      = link_to t('dmp.complete_plan'), complete_plan_path(@plan), class: "edit_link"
  .right
    

-# One query across all phases
- question_count = @plan.question_counts
- answered_count = @plan.answered_counts
- multi_message = false

.panel
  %h3
    %span.info_icon{:title => t('dmp.plan_phase_explanation')}
      %span= t('dmp.project_access')
  .panel_contents
    %dl.phases
      - @plan.template_instances.for_user(current_user).each do |t|
        %dt= "#{t.template.organisation.short_name} #{t.template.name}"
        %dd
          - if t.phase_edition_instances.empty?
            %p.error= t('dmp.no_phases')
          - else
            %ol
              - if t.phase_edition_instances.count > 1
                - multi_message = true
              - t.phase_edition_instances.sorted.each do |p|
                - opts = {}
                - opts[:method] = :put
                - if answered_count[p.id].to_i > 0 && t.current_edition_id != p.edition_id
                  - opts[:confirm] = t('dmp.confirm_phase_change')
                - c = ''
                - if answered_count[p.id] == question_count[p.id]
                  - c = 'completed'
                - elsif answered_count[p.id].to_i > 0 
                  - c = 'started'
                - else
                  - c = 'new'
                - if t.current_edition_id == p.edition_id
                  - c += ' current'
                - else
                  - c += ' active'
                %li
                  -# HTML5 allows block elements within a tags
                  - phase_block = render partial: 'phase_block', locals: {c: c, phase: p.edition.phase.phase, edition: p.edition.edition, qc: question_count[p.id], ac: answered_count[p.id]}
                  - if cannot?(:update, @plan)
                    = phase_block
                  - else
                    = link_to_if(t.current_edition_id == p.edition_id, phase_block, complete_plan_path(@plan, :tid => t.template_id)) do
                      = link_to(phase_block, change_phase_plan_path(@plan, :edition_id => p.edition_id), opts)

    - if multi_message
      %p.phase_guide= t('dmp.change_phase')

- if @plan.repository
  - render partial: 'repository_log'
